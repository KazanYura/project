[{"/home/yura/Downloads/practice3/src/index.js":"1","/home/yura/Downloads/practice3/src/App.js":"2","/home/yura/Downloads/practice3/src/components/Home.js":"3","/home/yura/Downloads/practice3/src/components/PokedexBasic.js":"4","/home/yura/Downloads/practice3/src/elements/Pokedex.js":"5","/home/yura/Downloads/practice3/src/constants/colors.js":"6","/home/yura/Downloads/practice3/src/charts/RadarStats.js":"7","/home/yura/Downloads/practice3/src/charts/TableChart.js":"8","/home/yura/Downloads/practice3/src/components/Legendary.js":"9","/home/yura/Downloads/practice3/src/charts/BubbleChart.js":"10","/home/yura/Downloads/practice3/src/components/NewLeg.js":"11","/home/yura/Downloads/practice3/src/charts/LegendBubble.js":"12","/home/yura/Downloads/practice3/src/charts/LegendToType.js":"13","/home/yura/Downloads/practice3/src/charts/PseudoLegendToType.js":"14"},{"size":225,"mtime":1607782986367,"results":"15","hashOfConfig":"16"},{"size":1421,"mtime":1609017867183,"results":"17","hashOfConfig":"16"},{"size":1075,"mtime":1609017243787,"results":"18","hashOfConfig":"16"},{"size":5239,"mtime":1608999883817,"results":"19","hashOfConfig":"16"},{"size":3317,"mtime":1608996081092,"results":"20","hashOfConfig":"16"},{"size":0,"mtime":1608989807385,"results":"21","hashOfConfig":"16"},{"size":2050,"mtime":1608999931009,"results":"22","hashOfConfig":"16"},{"size":2714,"mtime":1608999652771,"results":"23","hashOfConfig":"16"},{"size":2992,"mtime":1609016885364,"results":"24","hashOfConfig":"16"},{"size":5248,"mtime":1609016075206,"results":"25","hashOfConfig":"16"},{"size":2460,"mtime":1609020076498,"results":"26","hashOfConfig":"16"},{"size":4216,"mtime":1609018867614,"results":"27","hashOfConfig":"16"},{"size":2490,"mtime":1609019943291,"results":"28","hashOfConfig":"16"},{"size":2513,"mtime":1609019955874,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1yrwx7e",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yura/Downloads/practice3/src/index.js",[],["61","62"],"/home/yura/Downloads/practice3/src/App.js",[],"/home/yura/Downloads/practice3/src/components/Home.js",[],"/home/yura/Downloads/practice3/src/components/PokedexBasic.js",[],"/home/yura/Downloads/practice3/src/elements/Pokedex.js",["63"],"import React, { memo } from \"react\";\n\nconst TypeToColor  = {\n    \"Normal\":\"#A8A77A\",\n    \"Fire\":  \"#EE8130\",\n    \"Water\":  \"#6390F0\",\n    \"Electric\":  \"#F7D02C\",\n    \"Grass\":  \"#7AC74C\",\n    \"Ice\":  \"#96D9D6\",\n    \"Fighting\":  \"#C22E28\",\n    \"Poison\":  \"#A33EA1\",\n    \"Ground\":  \"#E2BF65\",\n    \"Flying\":  \"#A98FF3\",\n    \"Psychic\":  \"#F95587\",\n    \"Bug\":  \"#A6B91A\",\n    \"Rock\":  \"#B6A136\",\n    \"Ghost\":  \"#735797\",\n    \"Dragon\":  \"#6F35FC\",\n    \"Dark\":  \"#705746\",\n    \"Steel\":  \"#B7B7CE\",\n    \"Fairy\":  \"#D685AD\", \n}\nconst MapChart = ({ pokemon }) => {\n    let imageName;\n\n    if (pokemon[\"name\"].includes(\"Mega \")){\n        if ((pokemon[\"name\"].includes(\"Mega \")) && (pokemon[\"name\"].includes(\" X\")))\n        imageName = pokemon[\"pokedex_number\"] + \"-mega-x\";\n        else {\n            if ((pokemon[\"name\"].includes(\"Mega \")) && (pokemon[\"name\"].includes(\" Y\")))\n            imageName = pokemon[\"pokedex_number\"] + \"-mega-y\";\n            else \n            imageName = pokemon[\"pokedex_number\"] + \"-mega\";\n        }\n    }\n    else {\n        imageName = pokemon[\"pokedex_number\"]\n    }\n  return (\n    <>\n    <div className=\"pokedex\" style={{backgroundColor:TypeToColor[pokemon[\"type_1\"]], textAlign:\"center\", width:\"350px\",float:\"right\",border:\"3px solid black\"}}>\n        <div className=\"nameHolder\" style={{padding:\"5%\"}}>\n            <h2>#{pokemon[\"pokedex_number\"]}  {pokemon[\"name\"]}</h2>\n        </div>\n        <div className=\"imageHolder\" style={{borderTop:\"3px solid black\",padding:\"5%\"}}>\n            <img src={process.env.PUBLIC_URL + \"/images/pokemon_jpg/\" + imageName + \".jpg\"}/>\n        </div>\n        <div className=\"statsHolder\" style={{paddingBottom:\"20px\"}}>\n            <div style={{borderTop:\"3px solid black\"}}>\n            <h3>Type</h3>\n            <ul>\n                <li>\n                    {pokemon[\"type_1\"]}\n                    </li>\n                    <li>\n                        {pokemon[\"type_2\"]}\n                    </li>\n                </ul>\n            </div>\n            <div style={{borderTop:\"3px solid black\"}}>\n            <h3>Abilities:</h3>\n                <ul>\n                    <li>\n                        {pokemon[\"ability_1\"]}\n                    </li>\n                    <li>\n                        {pokemon[\"ability_2\"]}\n                    </li>\n                    <li>\n                        {pokemon[\"ability_hidden\"]}\n                    </li>\n                </ul>\n                </div>\n                <div style={{borderTop:\"3px solid black\"}}>\n                <h3>Stats:</h3>\n                <ul>\n                    <li>\n                        HP: {pokemon[\"hp\"]}\n                    </li>\n                    <li>\n                        Attack: {pokemon[\"attack\"]}\n                    </li>\n                    <li>\n                        Defense: {pokemon[\"defense\"]}\n                    </li>\n                    <li>\n                        Special Attack: {pokemon[\"sp_attack\"]}\n                    </li>\n                    <li>\n                        Special Defense: {pokemon[\"sp_defense\"]}\n                    </li>\n                    <li>\n                        Speed: {pokemon[\"speed\"]}\n                    </li>\n                </ul>\n                </div>\n        </div>\n    </div>\n    </>\n  );\n};\n\nexport default memo(MapChart);","/home/yura/Downloads/practice3/src/constants/colors.js",[],"/home/yura/Downloads/practice3/src/charts/RadarStats.js",["64","65"],"import { max } from 'date-fns';\nimport React, { PureComponent } from 'react';\n\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,\n} from 'recharts';\n\nexport default class RadarStats extends PureComponent {\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/6ebcxbx4/';  \n    render(){\n        let pokemon = this.props.pokemon;\n      let data = [              \n        {field:\"HP\",value : parseInt(pokemon[\"hp\"])},\n        {field:\"Attack\", value :  parseInt(pokemon[\"attack\"])},\n        {field:\"Defense\",value: parseInt(pokemon[\"defense\"])},\n        {field:\"Special Attack\",value: parseInt(pokemon[\"sp_attack\"])},\n        {field:\"Special Defense\",value: parseInt(pokemon[\"sp_defense\"])},\n        {field:\"Speed\",value: parseInt(pokemon[\"speed\"])}];\n        let message = \"\";\n        let stats = [parseInt(pokemon[\"attack\"]), parseInt(pokemon[\"defense\"]),parseInt(pokemon[\"sp_attack\"]),parseInt(pokemon[\"sp_defense\"]) ]\n        console.log(stats)\n        switch (Math.max(...stats)){\n            case parseInt(pokemon[\"attack\"]):\n                message = \"Pokemon \" + pokemon[\"name\"] + \" is physical damager\";\n                break;\n            case parseInt(pokemon[\"defense\"]):\n                message = \"Pokemon \" + pokemon[\"name\"] + \" is physical tank\";\n                break;\n            case parseInt(pokemon[\"sp_attack\"]):\n                message = \"Pokemon \" + pokemon[\"name\"] + \" is special damager\";\n                break;\n            case parseInt(pokemon[\"sp_defense\"]):\n                message = \"Pokemon \" + pokemon[\"name\"] + \" is special tank\";\n                break;\n        }\n    console.log('Messga' + message)\n      return (\n          <div>\n            <h3>{message}</h3>\n        <RadarChart cx={400} cy={180} outerRadius={150} width={600} height={450} data={data}>\n          <PolarGrid />\n          <PolarAngleAxis dataKey=\"field\" />\n          <PolarRadiusAxis />\n          <Radar dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n        </RadarChart>\n        </div>\n      );\n  }\n}","/home/yura/Downloads/practice3/src/charts/TableChart.js",[],"/home/yura/Downloads/practice3/src/components/Legendary.js",[],"/home/yura/Downloads/practice3/src/charts/BubbleChart.js",["66"],"/home/yura/Downloads/practice3/src/components/NewLeg.js",["67"],"/home/yura/Downloads/practice3/src/charts/LegendBubble.js",[],"/home/yura/Downloads/practice3/src/charts/LegendToType.js",[],"/home/yura/Downloads/practice3/src/charts/PseudoLegendToType.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":46,"column":13,"nodeType":"74","endLine":46,"endColumn":94},{"ruleId":"75","severity":1,"message":"76","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":22,"column":9,"nodeType":"81","messageId":"82","endLine":35,"endColumn":10},{"ruleId":"75","severity":1,"message":"83","line":3,"column":69,"nodeType":"77","messageId":"78","endLine":3,"endColumn":75},{"ruleId":"75","severity":1,"message":"83","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":16},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'max' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation"]